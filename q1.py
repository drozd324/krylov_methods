import numpy as np

def arnoldi(A, u, m):
	rows, cols = A.shape
	
	Q = np.zeros((rows, m+1))
	H = np.zeros((m+1, m))

	Q[:, 0] = u/np.linalg.norm(u)

	for n in range(m):
		v = A @ Q[:, n]
		for j in range(n+1):
			H[j, n] = Q[:, j].T @ v
			v = v - (H[j, n] * Q[:, j])
			
		H[n+1, n] = np.linalg.norm(v)
		Q[:, n+1] = v / H[n+1, n]

	return Q, H

A = [[3, 8, 7, 3, 3, 7, 2, 3, 4, 8]
 	 [5, 4, 1, 6, 9, 8, 3, 7, 1, 9]
 	 [3, 6, 9, 4, 8, 6, 5, 6, 6, 6]
  	 [5, 3, 4, 7, 4, 9, 2, 3, 5, 1]
 	 [4, 4, 2, 1, 7, 4, 2, 2, 4, 5]
 	 [4, 2, 8, 6, 6, 5, 2, 1, 1, 2]
 	 [2, 8, 9, 5, 2, 9, 4, 7, 3, 3]
	 [9, 3, 2, 2, 7, 3, 4, 8, 7, 7]
	 [9, 1, 9, 3, 3, 1, 2, 7, 7, 1]
	 [9, 3, 2, 2, 6, 4, 4, 7, 3, 5]]

A = np.array(A)

u = [+0.757516242460009,
	 +2.734057963614329,
	 -0.555605907443403,
	 +1.144284746786790,
	 +0.645280108318073,
	 -0.085488474462339,
	 -0.623679022063185,
	 -0.465240896342741,
	 +2.382909057772335,
	 -0.120465395885881 ]


m = 10
Q, H = arnoldi(A, u, m)

entry = 8
print(Q[:, entry])

